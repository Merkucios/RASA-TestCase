services:
  backend:
    build:
        context: ./backend
        dockerfile: Dockerfile
    container_name: 'php-backend'
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
    depends_on:
      - db
    
  next:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file:
      - ./frontend/.env
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/client
    depends_on:
      - backend
  
  db:
    image: postgres:17.5-alpine
    container_name: db
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - postgres-backups:/backups
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./backend/.env
    ports:
      - '5432:5432'

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080" 
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - backend

volumes:
  postgres-data:
  postgres-backups:
  pgadmin-data:
  grafana-data:
  prometheus-data:  